import os
import base64
import io
from PIL import Image
import boto3
import json

# Initialize Bedrock runtime client
bedrock_runtime = boto3.client(
    service_name="bedrock-runtime",
    region_name="us-west-2",
)

def image_base64_encoder(image_name):
    """
    Encode an image file to base64 format.

    Args:
        image_name (str): The name of the image file.

    Returns:
        tuple: A tuple containing the file type and the base64 encoded image.
    """
    open_image = Image.open(image_name)
    image_bytes = io.BytesIO()
    open_image.save(image_bytes, format=open_image.format)
    image_bytes = image_bytes.getvalue()
    image_base64 = base64.b64encode(image_bytes).decode('utf-8')
    file_type = f"image/{open_image.format.lower()}"
    return file_type, image_base64

def image_to_text(image_name, text) -> str:
    """
    Convert an image to text using an AI model.

    Args:
        image_name (str): The name of the image file.
        text (str): Additional text or instructions for the AI model.

    Returns:
        str: The output text generated by the AI model.
    """
    file_type, image_base64 = image_base64_encoder(image_name)
    
    # Default system prompt if no specific question is provided
    system_prompt = """You are an AWS Solutions Architect. The image you've received is an architecture diagram. Please explain the technical data flow in detail, step-by-step, and identify each AWS service used in the diagram.

    If a more specific question is presented by the user, make sure to prioritize that answer.
    """
    if text == "":
        text = "Use the system prompt"
    
    prompt = {
        "anthropic_version": "bedrock-2023-05-31",
        "max_tokens": 10000,
        "temperature": 0.5,
        "system": system_prompt,
        "messages": [
            {
                "role": "user",
                "content": [
                    {
                        "type": "image",
                        "source": {
                            "type": "base64",
                            "media_type": file_type,
                            "data": image_base64
                        }
                    },
                    {
                        "type": "text",
                        "text": text
                    }
                ]
            }
        ]
    }
    
    json_prompt = json.dumps(prompt)
    response = bedrock_runtime.invoke_model(
        body=json_prompt,
        modelId="anthropic.claude-3-sonnet-20240229-v1:0",
        accept="application/json",
        contentType="application/json"
    )
    
    response_body = json.loads(response.get('body').read())
    llm_output = response_body['content'][0]['text']
    return llm_output

# Replace 'path_to_your_image.jpg' with the actual path to your image file
image_path = 'image.jpeg'
text_input = "You are an AWS Solutions Architect. The image you've received is an architecture diagram. Please explain the technical data flow in detail, step-by-step, and identify each AWS service used in the diagram."  # You can put specific instructions here if needed

# Call the function
output_text = image_to_text(image_path, text_input)

# Print the result
print(output_text)
